error[E0570]: "ptx-kernel" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:36:8
   |
LL | extern "ptx-kernel" fn ptx() {}
   |        ^^^^^^^^^^^^

error[E0570]: "ptx-kernel" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:38:22
   |
LL | fn ptx_ptr(f: extern "ptx-kernel" fn()) {
   |                      ^^^^^^^^^^^^

error[E0570]: "ptx-kernel" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:42:8
   |
LL | extern "ptx-kernel" {}
   |        ^^^^^^^^^^^^

error[E0570]: "gpu-kernel" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:44:8
   |
LL | extern "gpu-kernel" fn gpu() {}
   |        ^^^^^^^^^^^^

error[E0570]: "aapcs" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:47:8
   |
LL | extern "aapcs" fn aapcs() {}
   |        ^^^^^^^

error[E0570]: "aapcs" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:49:24
   |
LL | fn aapcs_ptr(f: extern "aapcs" fn()) {
   |                        ^^^^^^^

error[E0570]: "aapcs" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:53:8
   |
LL | extern "aapcs" {}
   |        ^^^^^^^

error[E0570]: "msp430-interrupt" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:56:8
   |
LL | extern "msp430-interrupt" fn msp430() {}
   |        ^^^^^^^^^^^^^^^^^^

error[E0570]: "msp430-interrupt" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:58:25
   |
LL | fn msp430_ptr(f: extern "msp430-interrupt" fn()) {
   |                         ^^^^^^^^^^^^^^^^^^

error[E0570]: "msp430-interrupt" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:62:8
   |
LL | extern "msp430-interrupt" {}
   |        ^^^^^^^^^^^^^^^^^^

error[E0570]: "avr-interrupt" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:65:8
   |
LL | extern "avr-interrupt" fn avr() {}
   |        ^^^^^^^^^^^^^^^

error[E0570]: "avr-interrupt" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:67:22
   |
LL | fn avr_ptr(f: extern "avr-interrupt" fn()) {
   |                      ^^^^^^^^^^^^^^^

error[E0570]: "avr-interrupt" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:71:8
   |
LL | extern "avr-interrupt" {}
   |        ^^^^^^^^^^^^^^^

error[E0570]: "riscv-interrupt-m" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:74:8
   |
LL | extern "riscv-interrupt-m" fn riscv() {}
   |        ^^^^^^^^^^^^^^^^^^^

error[E0570]: "riscv-interrupt-m" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:76:24
   |
LL | fn riscv_ptr(f: extern "riscv-interrupt-m" fn()) {
   |                        ^^^^^^^^^^^^^^^^^^^

error[E0570]: "riscv-interrupt-m" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:81:8
   |
LL | extern "riscv-interrupt-m" {}
   |        ^^^^^^^^^^^^^^^^^^^

error[E0570]: "thiscall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:94:8
   |
LL | extern "thiscall" fn thiscall() {}
   |        ^^^^^^^^^^

error[E0570]: "thiscall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:96:27
   |
LL | fn thiscall_ptr(f: extern "thiscall" fn()) {
   |                           ^^^^^^^^^^

error[E0570]: "thiscall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:100:8
   |
LL | extern "thiscall" {}
   |        ^^^^^^^^^^

error[E0570]: "C-cmse-nonsecure-call" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:146:28
   |
LL | fn cmse_call_ptr(f: extern "C-cmse-nonsecure-call" fn()) {
   |                            ^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: "C-cmse-nonsecure-entry" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:151:8
   |
LL | extern "C-cmse-nonsecure-entry" fn cmse_entry() {}
   |        ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: "C-cmse-nonsecure-entry" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:153:29
   |
LL | fn cmse_entry_ptr(f: extern "C-cmse-nonsecure-entry" fn()) {
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: "C-cmse-nonsecure-entry" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:157:8
   |
LL | extern "C-cmse-nonsecure-entry" {}
   |        ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: "thiscall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:167:17
   |
LL |     ptr: extern "thiscall" fn(),
   |                 ^^^^^^^^^^

error[E0570]: "thiscall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:172:16
   |
LL |     pub extern "thiscall" fn inherent_fn(self) {
   |                ^^^^^^^^^^

error[E0570]: "thiscall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:179:12
   |
LL |     extern "thiscall" fn trait_fn(self);
   |            ^^^^^^^^^^

error[E0570]: "thiscall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:184:12
   |
LL |     extern "thiscall" fn trait_fn(self) {
   |            ^^^^^^^^^^

warning: "stdcall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:107:19
   |
LL | fn stdcall_ptr(f: extern "stdcall" fn()) {
   |                   ^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: if you need `extern "stdcall"` on win32 and `extern "C"` everywhere else, use `extern "system"`
   = note: `#[warn(unsupported_calling_conventions)]` on by default

warning: "stdcall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:113:1
   |
LL | extern "stdcall" {}
   | ^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: if you need `extern "stdcall"` on win32 and `extern "C"` everywhere else, use `extern "system"`

warning: "stdcall-unwind" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:117:1
   |
LL | extern "stdcall-unwind" {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: if you need `extern "stdcall-unwind"` on win32 and `extern "C-unwind"` everywhere else, use `extern "system-unwind"`

warning: "cdecl" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:125:17
   |
LL | fn cdecl_ptr(f: extern "cdecl" fn()) {
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: use `extern "C"` instead

warning: "cdecl" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:130:1
   |
LL | extern "cdecl" {}
   | ^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: use `extern "C"` instead

warning: "cdecl-unwind" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:133:1
   |
LL | extern "cdecl-unwind" {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: use `extern "C-unwind"` instead

warning: "cdecl" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:162:1
   |
LL | extern "cdecl" {}
   | ^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: use `extern "C"` instead

error: functions with the "x86-interrupt" ABI cannot be called
  --> $DIR/unsupported.rs:88:5
   |
LL |     f()
   |     ^^^
   |
note: an `extern "x86-interrupt"` function can only be called using inline assembly
  --> $DIR/unsupported.rs:88:5
   |
LL |     f()
   |     ^^^

warning: "stdcall" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:103:1
   |
LL | extern "stdcall" fn stdcall() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: if you need `extern "stdcall"` on win32 and `extern "C"` everywhere else, use `extern "system"`

warning: "cdecl" is not a supported ABI for the current target
  --> $DIR/unsupported.rs:122:1
   |
LL | extern "cdecl" fn cdecl() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: use `extern "C"` instead

error: aborting due to 28 previous errors; 9 warnings emitted

For more information about this error, try `rustc --explain E0570`.
